- content_for :title, "Clustering app (AI) - #{@queue_length} items in queue"
- if @processing
  - content_for :head do
    meta content="3" http-equiv="refresh"

table class="table"
  thead
    tr
      th Type
      th Processed
      th Approved
      th Rejected
  - rel = AgentLog.where(id: AgentLog.ink_clusterer.manually_processed.order(created_at: :desc).limit(500).pluck(:id))
  tbody
    tr
      th Latest 500
      td= rel.count
      td= rel.approved.count
      td= rel.rejected.count
    - actions = rel.distinct.select("extra_data->>'action' as action_taken").map(&:action_taken).compact.sort
    - actions.each do |action|
      - action_rel = rel.where("extra_data->>'action' = ?", action)
      tr
        th= action
        td= action_rel.count
        td
          = action_rel.approved.count
          - unless action == "hand_over_to_human"
            - correct_auto_approve_count = action_rel.approved.where("extra_data->>'follow_up_action' = ?", 'approve').count
            - incorrect_auto_approve_count = action_rel.approved.where("extra_data->>'follow_up_action' = ?", 'reject').count
            - correct_percentage = (correct_auto_approve_count.to_f / (correct_auto_approve_count + incorrect_auto_approve_count) * 100).round(2)
            = " (#{correct_percentage}% / #{correct_auto_approve_count} correct auto review)"
        td
          = action_rel.rejected.count
          - unless action == "hand_over_to_human"
            - correct_auto_reject_count = action_rel.rejected.where("extra_data->>'follow_up_action' = ?", 'reject').count
            - incorrect_auto_reject_count = action_rel.rejected.where("extra_data->>'follow_up_action' = ?", 'approve').count
            - correct_percentage = (correct_auto_reject_count.to_f / (correct_auto_reject_count + incorrect_auto_reject_count) * 100).round(2)
            = " (#{correct_percentage}% / #{correct_auto_reject_count} correct auto review)"

= paginate @agent_logs

- @agent_logs.each do |agent_log|
  dl class="row" id="admin_agent_log"
    dt class="col-sm-3" State
    dd class="col-sm-9"
      = agent_log.state
      - if agent_log.agent_approved?
        b= " (agent processed)"

    - if agent_log.extra_data.present?
      - action = agent_log.extra_data["action"]
      - if action && agent_log.approved?
        dt class="col-sm-3" Action Taken
        dd class="col-sm-9"
          b= action
      dt class="col-sm-3" Extra Data
      dd class="col-sm-9"
        pre= JSON.pretty_generate(agent_log.extra_data)

    - unless agent_log.processing?
      dt class="col-sm-3" Owner
      dd class="col-sm-9"
        pre= JSON.pretty_generate(agent_log.owner.attributes)

      dt class="col-sm-3" Actions
      dd class="col-sm-9"
        - if agent_log.agent_approved?
          - if agent_log.approved?
            = link_to "Approve", admins_agents_ink_clusterer_path(agent_log, page: params[:page]), method: :put, class: 'btn btn-success me-5'
            = link_to "Reject approval and reprocess", admins_agents_ink_clusterer_path(agent_log, page: params[:page]), method: :delete, class: 'btn btn-danger me-5'
            = link_to "Reject approval and reprocess (delete history)", admins_agents_ink_clusterer_path(agent_log, page: params[:page], delete_history: true), method: :delete, class: 'btn btn-danger me-5'
          - else
            / Note how the URLs are switched around as if it's already rejected then a rejection will be the implicit approval.
            = link_to "Approve rejection", admins_agents_ink_clusterer_path(agent_log, page: params[:page]), method: :delete, class: 'btn btn-success me-5'
            = link_to "Should have been approved", admins_agents_ink_clusterer_path(agent_log, page: params[:page]), method: :put, class: 'btn btn-danger me-5'
        - else
          = link_to "Approve", admins_agents_ink_clusterer_path(agent_log, page: params[:page]), method: :put, class: 'btn btn-success me-5'
          = link_to "Reject", admins_agents_ink_clusterer_path(agent_log, page: params[:page]), method: :delete, class: 'btn btn-danger me-5'
        = link_to "Search", "https://www.google.com/search?#{{q: agent_log.owner.all_names.first}.to_query}", class: 'btn btn-secondary', target: "_blank"
    dt class="col-sm-3" Transcript
    dd class="col-sm-9"
      - agent_log.transcript.each do |transcript|
        pre= JSON.pretty_generate(transcript)

= paginate @agent_logs
